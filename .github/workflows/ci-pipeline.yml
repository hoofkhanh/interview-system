name: Build and Push Changed Microservices

on:
  push:
    branches: ["main"]

env:
  IMAGE_TAG: "1.0.0"

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      interview-system-config-server: ${{ steps.filter.outputs.config-server }}
      interview-system-discovery-server: ${{ steps.filter.outputs.discovery-server }}
      interview-system-user-service: ${{ steps.filter.outputs.user-service }}
      interview-system-auth-service: ${{ steps.filter.outputs.auth-service }}
      interview-system-gateway-service: ${{ steps.filter.outputs.gateway-service }}
      interview-system-question-service: ${{ steps.filter.outputs.question-service }}
      interview-system-session-service: ${{ steps.filter.outputs.session-service }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Filter changed services
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            config-server:
              - 'services/interview-system-config-server/**'
              - 'commons/**'
              - 'pom.xml'
            discovery-server:
              - 'services/interview-system-discovery-server/**'
              - 'commons/**'
              - 'pom.xml'
            user-service:
              - 'services/interview-system-user-service/**'
              - 'commons/**'
              - 'pom.xml'
            auth-service:
              - 'services/interview-system-auth-service/**'
              - 'commons/**'
              - 'pom.xml'
            gateway-service:
              - 'services/interview-system-gateway-service/**'
              - 'commons/**'
              - 'pom.xml'
            question-service:
              - 'services/interview-system-question-service/**'
              - 'commons/**'
              - 'pom.xml'
            session-service:
              - 'services/interview-system-session-service/**'
              - 'commons/**'
              - 'pom.xml'

  build-and-push:
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - interview-system-config-server
          - interview-system-discovery-server
          - interview-system-user-service
          - interview-system-auth-service
          - interview-system-gateway-service
          - interview-system-question-service
          - interview-system-session-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and install parent pom
        if: ${{ needs.filter.outputs[matrix.service] == 'true' }}
        run: mvn clean install -DskipTests

      - name: Build and install common module
        if: ${{ needs.filter.outputs[matrix.service] == 'true' }}
        run: mvn clean install -pl commons/interview-system-common-libary -am -DskipTests

      - name: Run unit tests for ${{ matrix.service }}
        if: ${{ needs.filter.outputs[matrix.service] == 'true' }}
        run: mvn -B install -pl services/${{ matrix.service }} -am

      - name: Log in to Docker Hub
        if: ${{ needs.filter.outputs[matrix.service] == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }} Docker image
        if: ${{ needs.filter.outputs[matrix.service] == 'true' }}
        run: |
          docker build -f services/${{ matrix.service }}/Dockerfile \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:1.0.0 .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:1.0.0
